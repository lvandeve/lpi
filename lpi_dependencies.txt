/*
Copyright (c) 2005-2009 Lode Vandevenne
All rights reserved.

This file is part of Lode's Programming Interface.

Lode's Programming Interface is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Lode's Programming Interface is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Lode's Programming Interface.  If not, see <http://www.gnu.org/licenses/>.
*/

//TODO: this file doesn't represent the current state of LPI anymore while the "drawers" are being refactored

lpi units
---------

lodepng: PNG reading and writing. Also independent zlib encoder/decoder.
lodewav: wav file reading and writing
lpi_audio: playing audio, audio samples being std::vector<double>'s
lpi_base64: base64 encode/decode
lpi_bignums: contains currently a 128-bit fixed point number class
lpi_color: different color types and conversions
lpi_draw2d: interface for 2D geometric primitive drawers, and general 2D drawing algorithms such as line clipping
lpi_draw2d_buffer: implementation of the 2D drawer using a unsigned char pixel buffer
lpi_draw2dgl: implementation of the 2D drawer using OpenGL
lpi_draw3dgl: draw 3D primitives that aren't standard in OpenGL, e.g. a 3D linesegment-circle, and some GL related 3D math
lpi_event: events, keyboard and mouse input with SDL
lpi_file: load and save files through simpler interface
lpi_filebrowse: interface for browsing files (that is, getting lists of files in a dir, subdirs, ...)
lpi_filebrowse_boost: implementation of lpi_filebrowse using boost::filesystem
lpi_gui: an OpenGL based gui with buttons, windows, scrollbars, ...
lpi_gui_base: very general base classes for lpi GUI, it especially handles the mouse. No dependencies on anything in it.
lpi_gui_color: GUI controls for selecting and viewing colors, like a HSV circle, RGB sliders, etc...
lpi_gui_drawer: interface for drawer used by the GUI, which combines primitive drawer, text drawer, gui part drawer and input in one
lpi_gui_drawer_buffer: implementation of GUI drawer using the buffer drawer
lpi_gui-drawer_gl: implementation of the GUI drawer using OpenGL
lpi_gui_dynamic: a dynamic GUI page with controls that can be bound to values of specific or generic types.
lpi_gui_ex: extra/extended GUI widgets for lpi_gui, such as drawing canvas, grid, ...
lpi_gui_text: text-input related GUI widgets for lpi_gui, such as input line, input box, console, ...
lpi_input: interface for user input, currently only used by gui
lpi_input_sdl: implementation of input interface using SDL, very similar functionality to lpi_event.h but with interface around it
lpi_math: some mathematics useful for games (random, quadratic solve, ...) but not in <cmath> (and also a sort function because where else to put it...)
lpi_math2d: 2D vector math
lpi_math3d: 3D vector, matrix, transformation and camera math
lpi_math4d: 4D vector and matrix
lpi_parse: parsing utilities
lpi_pathfind: A* path finding, useful for some games
lpi_screen_gl: set up the SDL + OpenGL screen
lpi_text_drawer: interface for text drawers
lpi_text_drawer_int: implementation of the text drawer that allows using any 2D drawer and supports 3 built in bitmap fonts
lpi_texture: interface for 2D textures
lpi_texture_buffer: implementation of lpi_texture using unsigned char buffer in main memory
lpi_texture_gl: implementation of textures interface for use in OpenGL or SDL screen. They can be drawn in 2D on screen, or used in 3D to map on OpenGL vertices.
lpi_time: SDL_GetTicks and a class for handling time for physics and FPS counter in game
lpi_tools: tools for developing lpi itself more easily
lpi_unittest: unit testing ability
lpi_xml: XML parsing and generating
quickcg: full 2D graphics SDL wrapper library, independent from lpi


External dependencies of lpi
----------------------------

C++ standard library
SDL
OpenGL


lpi units that depend only on standard C++
------------------------------------------

These can be used as independent libraries or tools whenever needed individually.

*) lodepng
*) lodewav
*) lpi_base64
*) lpi_bignums
*) lpi_color
*) lpi_file
*) lpi_math
*) lpi_math2d
*) lpi_parse
*) lpi_pathfind
*) lpi_unittest
*) lpi_xml


lpi units that depend on a few other lpi units but not on SDL or OpenGL
-----------------------------------------------------------------------

Still useful as independent library in combination with only a few other lpi units.

*) lpi_draw2d: lpi_color

*) lpi_math3d: lpi_math2d

*) lpi_math4d: lpi_math3d

*) lpi_gui_base: lpi_input


lpi units that depend on SDL and/or OpenGL, but not on other lpi units
----------------------------------------------------------------------

*) lpi_audio: SDL

*) lpi_event: SDL

*) lpi_gl: OpenGL

*) lpi_time: SDL

*) quickcg: SDL


lpi units that depend on both other lpi units and OpenGL or SDL
---------------------------------------------------------------

lpi units with lots of dependencies on other lpi units and the external libraries.
Indirect dependencies aren't always mentioned here. That is, if A depends on B and B on C,
then it isn't always mentioned that A indirectly depends on C.

*) lpi_draw2dgl: OpenGL, lpi_color, lpi_gl, lpi_draw2d

*) lpi_draw3dgl: OpenGL, lpi_color, lpi_draw2d, lpi_math3d

*) lpi_gui: SDL, OpenGL, lpi_gui_base, lpi_gui_draw, lpi_color, lpi_texture, lpi_text, lpi_gl, lpi_draw2dgl

*) lpi_gui_color: SDL, OpenGL, lpi_gui

*) lpi_gui_drawer_gl: SDL, OpenGL, lodepng, lpi_text, lpi_texture, lpi_gl, lpi_color, lpi_draw2dgl, lpi_xml, lpi_file, lpi_base64

*) lpi_gui_dynamic: SDL, OpenGL, lpi_gui

*) lpi_gui_ex: SDL, OpenGL, lpi_gui

*) lpi_gui_input_sdl: SDL, lpi_event, lpi_time

*) lpi_gui_text: SDL, OpenGL, lpi_gui

*) lpi_input_sdl: SDL, lpi_input

*) lpi_screen: SDL, OpenGL, lpi_color

*) lpi_text: OpenGL, lodepng, lpi_texture, lpi_color, lpi_parse

*) lpi_texture: OpenGL, lodepng, lpi_base64, lpi_gl, lpi_color

